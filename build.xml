<?xml version="1.0" encoding="utf-8"?>
<!-- ********************************************************* -->
<!-- ** HL7 Listener										** -->
<!-- **														** -->
<!-- ** @author Vibha Anand									** -->
<!-- ** @version 1.0										** -->
<!-- ********************************************************* -->
<project name="SocketHL7listener" default="package-module">
		
	<property file="build.properties" />

		
	<!-- *********************************************************** -->
	<!-- **                     TARGETS                           ** -->
	<!-- *********************************************************** -->
	<target name="init" description="initialization">
		<xmlcatalog id="common-dtds">
			        <dtd 
			            publicId="-//OpenMRS//DTD OpenMRS Config 1.0//EN"
			            location="lib-common/config-1.0.dtd"/>
			    </xmlcatalog>
				
				<xmlproperty file="metadata/config.xml" >
					<xmlcatalog refid="common-dtds"/>
				</xmlproperty>

		<filterset id="variables.to.replace">
			<filter token="MODULE_ID" value="${module.id}" />
			<filter token="MODULE_NAME" value="${module.name}" />
			<filter token="MODULE_VERSION" value="${module.version}" />
			<filter token="MODULE_PACKAGE" value="${module.package}" />
		</filterset>
		
		<path id="classpath">
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="lib-common">
				<include name="**/*.jar"/>
			</fileset>
			<pathelement location="build" />
		</path>

	</target>

	<target name="clean" description="Delete build and dist directories">
		<delete dir="dist" />
		<delete dir="build" />
	</target>

	<target name="compile-source" depends="init" description="Compiles the source files">
		<mkdir dir="build" />
		
		<copy todir="build">
			<fileset dir="src/" excludes="**/*.java" />
		</copy>
		
		<!--  Compile module java files -->
		<javac destdir="build" classpathref="classpath" debug="true">
			<src path="src/" />
			<include name="**/*.java" />		
		</javac>
		
		<!--  Compile module test java files -->
		<javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
			<src path="test/" />
			<include name="**/*.java" />
		</javac>
				
		<!--  Compile module web java files -->
		<!--<javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
			<compilerarg line="-g" />
			<src path="web/src/" />
			<include name="**/*.java" />
		</javac>-->
	</target>
	
	<target name="package-jar" depends="package-module" description="Packages class files into jar file to be included in other projects">
			<!-- Create distributable jar file -->
			<jar destfile="dist/${module.id}-${module.version}.jar">
				<fileset dir="build" >
					<exclude name="test/**/*" />
				</fileset>
			</jar>
		</target>
	<target name="run" depends="package-jar">
	        <java fork="true" classname="${main-class}">
	        	<arg value= "8765" />
	            <classpath>
	                <path refid="classpath"/>
	                <path location="${jar.dir}/${ant.project.name}.jar"/>
	            </classpath>
	        </java>
	 </target>


	<target name="Tester jar" depends="compile-source" description="Makes into jar file">
			<mkdir dir="dist" />
			<mkdir dir="dist/Tester" />
			<mkdir dir="dist/Tester/bin" />
		
			<manifestclasspath property="tester.classpath"
				                       jarfile="${jar.dir}/Tester.jar">
				      <classpath>
				      	<fileset dir="lib">
				      		<include name="**/*.jar"/>
				      	</fileset>
				      	<fileset dir="lib-common">
				      		<include name="**/*.jar"/>
						</fileset>
				      </classpath>
			</manifestclasspath>
			<copy todir="${jar.dir}/Tester/lib-common/" failonerror="false">
				<fileset dir="lib-common" includes="**/*" />
			</copy>
			<copy todir="${jar.dir}/Tester/lib/" failonerror="false">
						<fileset dir="lib" includes="**/*" />
			</copy>
			<copy file="metadata/Tester.bat" tofile="${jar.dir}/Tester/Tester.bat"/>

			<!-- Create distributable jar file -->
			<jar destfile="${jar.dir}/Tester/bin/Tester.jar">
				<fileset dir="build" >
					<exclude name="test/**/*" />
					<exclude name="web/**/*" />
				</fileset>
				
				<manifest>
				  <attribute name="Main-Class" value="org.openmrs.module.sockethl7listener.DialogBox"/>
	  			  <attribute name="Class-Path" value="${tester.classpath}"/>
				</manifest>
			</jar>
		
		<jar destfile="dist/ATDExporter.jar">
						<fileset dir="build" includes="**/*" />
						
						<manifest>
						  <attribute name="Main-Class" value="org.openmrs.module.sockethl7listener.ATDExporter"/>
			  			  <attribute name="Class-Path" value="${jar.classpath}"/>

						</manifest>
						
		</jar>
		</target>
	
	<!-- ================================= 
          target: Install              
         ================================= -->
    <target name="Install-app" depends="package-jar"  description="--> install process">
    	
    	
    	<mkdir dir="${run.dir}/dist" />
    	<mkdir dir="${run.dir}/lib" />
    	<copy todir="${run.dir}/dist">
			<fileset dir="${jar.dir}">
				<include name="${ant.project.name}-${sockethl7listener.version.major}.${sockethl7listener.version.minor}.${sockethl7listener.version.revision}.jar" />
			</fileset>
    					
    	</copy>
    	
    	<copy todir="${run.dir}/lib">
    		<fileset dir="lib/">
    			<include name="**/*.jar" />
    			<include name="**/*.war" />
    		</fileset>
    	</copy>
    	<copy todir="${run.dir}/dist">
    		 <fileset dir="lib/">
    		 	<include name="dss*.jar" />
    		</fileset>
    		
    	    <fileset dir="metadata/">
				<include name="**/*.xml" />
				<include name="**/*.bat" />
				<include name="**/*.properties" />
			</fileset>
    	    					
    	</copy>
    </target>
	
	 <target name="Install-tester" depends="Tester jar"  description="--> install tester">
    	<mkdir dir="${run.dir}/dist" />
    	<copy todir="${run.dir}/dist">
			<fileset dir="${basedir}/dist/">
				<include name="Tester.jar" />
		</fileset>
    	</copy>
	 </target>
	
	<target name="Install-exporter" depends="Tester jar"  description="--> install tester">
	    	<mkdir dir="${run.dir}/dist" />
	    	<copy todir="${run.dir}/dist">
				<fileset dir="${basedir}/dist/">
					<include name="ATDExporter.jar" />
			</fileset>
	    	</copy>
		 </target>
	
	<filterset id="variables.to.replace">
				<filter token="MODULE_ID" value="${module.id}" />
				<filter token="MODULE_NAME" value="${module.name}" />
				<filter token="MODULE_VERSION" value="${module.version}" />
				<filter token="MODULE_PACKAGE" value="${module.package}" />
			</filterset>
	
	<target name="package-module" depends="compile-source" description="Packages module into jar file">
			<mkdir dir="dist" />
			
			<!-- Copy module metadata -->
			<copy todir="build/">
				<fileset dir="metadata/" includes="**/*" />
				<filterset refid="variables.to.replace" />
			</copy>
			
			<!-- Copy module web data -->
			<!--<copy todir="build/web/module/">
				<fileset dir="web/module/" includes="**/*" />
				<filterset refid="variables.to.replace" />
			</copy>-->
			
			<!-- Copy lib folder -->
			<!-- (lib should only contain this module's required -->
			<!-- libraries that OpenMRS doesn't contain already) -->
			<copy todir="build/lib" failonerror="false">
				<fileset dir="lib" includes="**/*" />
			</copy>
			
		    <!-- Copy log4j properties -->
		     <copy todir="build/">
		     	<fileset dir="" includes="log4j.xml" />
		     </copy>
			
			<!-- Copy test files -->
				     <copy todir="build/">
				     	<fileset dir="test" includes="*.xml" />
				     </copy>
			
			<!-- Create distributable jar file -->
			<jar destfile="dist/${module.id}-${module.version}.omod">
				<fileset dir="build" includes="**/*" />
			</jar>
		</target>

</project>
